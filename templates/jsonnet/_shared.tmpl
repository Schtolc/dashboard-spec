{{- define "topLevelSimpleProperties"}}
  new(
    {{- range $name, $schema := .TopLevelSimpleProperties}}
    {{objectInflection ($schema.HumanName $name)}}={{$schema.DefaultJSON}},
    {{- end}}
  ):: {
    {{- range $name, $schema := .TopLevelSimpleProperties}}
    [if {{$name}} != null then '{{$name}}']: {{objectInflection ($schema.HumanName $name)}},
    {{- end}}
{{- end}}

{{- define "readOnlyWithDefaultProperties"}}
    {{- range $fs := .ReadOnlyWithDefaultProperties}}
    {{range $i, $level := $fs.Location -}}
    {{if eq (add 1 $i) (len $fs.Location)}}{{$level}}: {{$fs.Schema.DefaultJSON}}{{repeat " }" (subtract (len $fs.Location) 1)}}{{else}}{{$level}}+: { {{end}}{{end}},
    {{- end}}
{{- end}}

{{- define "topLevelObjectProperties"}}
    {{range $topName, $schema := .TopLevelObjectProperties}}
    {{objectInflection (printf "set %s" ($schema.HumanName $topName))}}(
      {{- range $fs := $schema.NestedSimpleProperties}}
      {{objectInflection ($fs.Schema.HumanName $fs.Name)}}={{$fs.Schema.DefaultJSON}},
      {{- end}}
    ):: self {}
      {{range $fs := $schema.NestedSimpleProperties -}}
      + { {{$topName}}+: {{range $i, $level := $fs.Location -}}
      { {{if eq (add 1 $i) (len $fs.Location)}}{{$level}}: {{objectInflection ($fs.Schema.HumanName $fs.Name)}}{{repeat " }" (len $fs.Location)}}{{else}}{{$level}}+: {{end}}{{end}} }
      {{end}},
    {{end}}
{{- end}}

{{- define "nestedComplexArrayProperties"}}
    {{range $fs := .NestedComplexArrayProperties}}
    {{singularize (objectInflection (printf "add %s" ($fs.Schema.HumanName $fs.Name)))}}(
      {{- if eq (len $fs.Schema.Items.Properties) 0}}
      {{singularize (objectInflection ($fs.Schema.HumanName $fs.Name))}}
      {{- else}}
      {{- range $name, $schema := $fs.Schema.Items.Properties}}
      {{objectInflection ($schema.HumanName $name)}}={{$schema.DefaultJSON}},
      {{- end}}
      {{- end}}
    ):: self {}
      + {{range $i, $level := $fs.Location -}}
      { {{$level}}+: {{if eq (add 1 $i) (len $fs.Location)}}[
        {{- if eq (len $fs.Schema.Items.Properties) 0}}
        {{singularize (objectInflection ($fs.Schema.HumanName $fs.Name))}}
        {{- else}}
        {
          {{- range $name, $schema := $fs.Schema.Items.Properties}}
          {{$name}}: {{objectInflection ($schema.HumanName $name)}},
          {{- end}}
        },
        {{- end}}
      ]{{repeat " }" (len $fs.Location) -}}
      {{- end}}
      {{- end}},
    {{end}}
{{- end}}
