{{- define "topLevelSingleValProperties"}}
  new(
    {{- range $name, $schema := .TopLevelSingleValProperties}}
    {{$name}}={{$schema.DefaultJSON}},
    {{- end}}
  ):: {
    {{- range $name, $schema := .TopLevelSingleValProperties}}
    [if {{$name}} != null then '{{$name}}']: {{$name}},
    {{- end}}
{{- end}}

{{- define "readOnlyWithDefaultProperties"}}
    {{- range $ms := .ReadOnlyWithDefaultProperties}}
    {{range $i, $level := $ms.Location -}}
    {{if eq (add 1 $i) (len $ms.Location)}}{{$level}}: {{$ms.Schema.DefaultJSON}}{{repeat " }" (subtract (len $ms.Location) 1)}}{{else}}{{$level}}+: { {{end}}{{end}},
    {{- end}}
{{- end}}

{{- define "topLevelObjectProperties"}}
    {{range $topName, $schema := .TopLevelObjectProperties}}
    {{if $schema.Title -}}
    {{objectInflection (printf "set %s" $schema.Title)}}(
    {{- else}}
    {{objectInflection (printf "set %s" $topName)}}(
    {{- end}}
      {{- range $ms := $schema.ConstructableProperties}}
      {{$ms.Name}}={{$ms.Schema.DefaultJSON}},
      {{- end}}
    ):: self {}
      {{range $ms := $schema.ConstructableProperties -}}
      + { {{$topName}}+: {{range $i, $level := $ms.Location -}}
      { {{if eq (add 1 $i) (len $ms.Location)}}{{$level}}: {{$ms.Name}}{{repeat " }" (len $ms.Location)}}{{else}}{{$level}}+: {{end}}{{end}} }
      {{end}},
    {{end}}
{{- end}}

{{- define "appendableProperties"}}
    {{range $ms := .AppendableProperties}}
    {{if $ms.Schema.Title -}}
    {{- singularize (objectInflection (printf "add %s" $ms.Schema.Title))}}(
    {{- else}}
    {{- singularize (objectInflection (printf "add %s" $ms.Name))}}(
    {{- end}}
      {{- range $name, $schema := $ms.Schema.Items.Properties}}
      {{$name}}={{$schema.DefaultJSON}},
      {{- end}}
    ):: self {}
      + {{range $i, $level := $ms.Location -}}
      { {{$level}}+: {{if eq (add 1 $i) (len $ms.Location)}}[{
        {{- range $name, $schema := $ms.Schema.Items.Properties}}
        {{$name}}: {{$name}},
        {{- end}}
      }]{{repeat " }" (len $ms.Location) -}}
      {{- end}}
      {{- end}},
    {{end}}
{{- end}}
